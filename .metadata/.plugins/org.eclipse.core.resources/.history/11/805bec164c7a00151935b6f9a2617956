package HomeExam;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import Enteties.Boss;
import Enteties.Entity;
import Enteties.Player;
import Items.Item;
import Levels.Level;
import Levels.Room;

public class The_Game {
	public static Room activeRoom;
	public static Room previousRoom;
	public static Level level;
	public static Player player;
	public static boolean failedAction;

	
	
	public static void main(String[] args) throws Exception{
		
		// Init game
		String welcomeMessage = "                Welcome to Dragon Treasure\n Write your name and press [Enter] to start a new game...";
		activeRoom = new Room(null, null, welcomeMessage);
		GUI.alert(welcomeMessage);
		player = new Player(10,1,UserInput.userInput());
		level = new Level();
		activeRoom = level.getRooms().get(0);
		
		// Start the game
		The_Game the_game = new The_Game();

	}

	public The_Game() throws Exception {
		boolean run = true;
		while(run){
			
			if(activeRoom.hasMonster()){
				battle(player, activeRoom.getMonster());
			}
			
			GUI.drawRoom();
			
			UserInput.awaitAction();
			//activeRoom.playerPresent();
		}
	}

	private void battle(Entity entity1, Entity entity2) {
		GUI.alert(activeRoom.getMonster().getTaunt());
		
		while(entity1.isAlive() && entity2.isAlive() ){
			entity1.giveDamage(entity2);
			entity2.giveDamage(entity1);
		}
		
		if(!player.isAlive()){
			GUI.alert("You died... Game over");
			System.exit(0);
		}
		else{
			GUI.alert("You defeated " + activeRoom.getMonster().getName() + ", but you only have " + player.getHealth() + " hitpoints left.");
			player.pickupItem(activeRoom.getMonster().dropLoot());
			if(!activeRoom.getMonster().isAlive()){
				activeRoom.spawnMonster(null);
			}
		}
	}

	public static void move(Room room) {
		previousRoom = activeRoom;
		activeRoom = room;
		if(activeRoom.roomDescription == "THEEND"){
			gameComplete();
		}
	}

	private static void gameComplete() {
		for (Item item: player.getInventory()){
			if (item.getName() == "Treasure"){
				GUI.ending(true);
			}
		}
		
	}

	public static boolean pickUpItem(Item item) {
		return player.pickupItem(item);		
	}

}
